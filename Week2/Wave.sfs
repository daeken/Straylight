uniform sampler2D $grid1, $grid2, $add;

<%
	def SQ(v) v * v end
	
	WAVESPEED = 0.4
	WAVELIFE = 0.1
	GRIDSIZE = 0.3
	TIMEDELTA = 0.1
	
	GRIDXSPACING = 1.0 / 15
	GRIDYSPACING = 1.0 / 15
	
	calc1 = (4.0 - ((8.0 * SQ(WAVESPEED) * SQ(TIMEDELTA)) / SQ(GRIDSIZE))) / ((WAVELIFE * TIMEDELTA) + 2.0);
	calc2 = ((WAVELIFE * TIMEDELTA) - 2.0) / ((WAVELIFE * TIMEDELTA) + 2.0);
	calc3 = ((2.0 * SQ(WAVESPEED) * SQ(TIMEDELTA)) / SQ(GRIDSIZE)) / ((WAVELIFE * TIMEDELTA) + 2.0);
%>

float getVal1(float x, float y) {
	x = gl_TexCoord[0][0] + <%=GRIDXSPACING%>*x;
	y = gl_TexCoord[0][1] + <%=GRIDYSPACING%>*y;
	
	if(x < 0.0 || x > 1.0) return 0.0;
	if(y < 0.0 || y > 1.0) return 0.0;
	return texture2D($grid1, vec2(x, y)).a;
}

float getVal2() {
	return texture2D($grid2, gl_TexCoord[0].st).a;
}

void main() {
	gl_FragColor = vec4(
			gl_TexCoord[0].s, gl_TexCoord[0].t, 1.0, 
			(
				(<%=calc1%> * getVal1(0.0, 0.0)) + 
				(<%=calc2%> * getVal2()) + 
				(<%=calc3%> * (
						getVal1(1.0, 0.0) + getVal1(-1.0, 0.0) + getVal1(0.0, 1.0) + getVal1(0.0, -1.0)
					)) + 
				texture2D($add, gl_TexCoord[0].st).a
			)
		);
}
